name: Docker CI Workflow

on:
  workflow_dispatch:  # Manual trigger for the workflow
    inputs:
      release_tag:
        description: 'Reminder!!! This will be deployed to Production. Please Enter Release Tag. Please make sure you have already created and pushed the entered tag, otherwise the pipeline may fail.'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest  # Run on the latest Ubuntu environment

    env:
      TAG: ${{ github.event.inputs.release_tag }}  # Assign the release tag from the workflow input

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3  # Use the latest version of the checkout action
        with:
          ref: ${{ github.event.inputs.release_tag }} 

      # Append timestamp immediately after checkout and setup
      - name: Append Timestamp to TAG
        id: timestamp
        run: |
          timestamp=$(date +%Y%m%d%H%M%S)
          echo "TIMESTAMP=$timestamp" >> $GITHUB_ENV
          echo "Updated TAG=${{ env.TAG }}-$timestamp"
          echo "TAG=${{ env.TAG }}-$timestamp" >> $GITHUB_ENV


      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2


      # Log in to Docker Hub securely using GitHub Secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Reference Docker Hub username stored in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Reference Docker Hub password stored in GitHub Secrets

      # Build the Docker image with the provided TAG
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.TAG }} .

      # Tag the image for Docker Hub with the updated TAG
      - name: Tag Docker image with updated TAG
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/${{ env.TAG }} ${{ secrets.DOCKER_USERNAME }}/${{ env.TAG }}

      # Push the Docker image to Docker Hub with the original TAG
      - name: Push Docker image with original TAG
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.TAG }}
